<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <description>Jedis Configuration</description>

    <!-- 连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="minIdle" value="${redis.minIdle}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.testOnReturn}"/>
        <property name="testWhileIdle" value="${redis.testWhileIdle}"/>
        <property name="maxWaitMillis" value="15000"/>
        <property name="numTestsPerEvictionRun" value="3"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
    </bean>
    <!-- 集群配置
    <bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <property name="maxRedirects" value="1"/>
        <property name="clusterNodes">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="${redis.node1.host.prop}"/>
                    <constructor-arg name="port" value="${redis.node1.port.prop}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="${redis.node2.host.prop}"/>
                    <constructor-arg name="port" value="${redis.node2.port.prop}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="${redis.node3.host.prop}"/>
                    <constructor-arg name="port" value="${redis.node3.port.prop}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="${redis.node4.host.prop}"/>
                    <constructor-arg name="port" value="${redis.node4.port.prop}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="${redis.node5.host.prop}"/>
                    <constructor-arg name="port" value="${redis.node5.port.prop}"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="${redis.node6.host.prop}"/>
                    <constructor-arg name="port" value="${redis.node6.port.prop}"/>
                </bean>
                 <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="${redis.node7.host.prop}"/>
                    <constructor-arg name="port" value="${redis.node7.port.prop}"/>
                </bean>
                 <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="${redis.node8.host.prop}"/>
                    <constructor-arg name="port" value="${redis.node8.port.prop}"/>
                </bean>
                 <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="${redis.node9.host.prop}"/>
                    <constructor-arg name="port" value="${redis.node9.port.prop}"/>
                </bean>
                 <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="${redis.node10.host.prop}"/>
                    <constructor-arg name="port" value="${redis.node10.port.prop}"/>
                </bean>
                 <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="${redis.node11.host.prop}"/>
                    <constructor-arg name="port" value="${redis.node11.port.prop}"/>
                </bean>
                 <bean class="org.springframework.data.redis.connection.RedisClusterNode">
                    <constructor-arg name="host" value="${redis.node12.host.prop}"/>
                    <constructor-arg name="port" value="${redis.node12.port.prop}"/>
                </bean>
            </set>
        </property>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="usePool" value="true"/>
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="clusterConfig" ref="redisClusterConfiguration"/>
    </bean>
     -->
    <!-- 连接工厂-->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.server.host.prop}"/>
        <property name="port" value="${redis.server.port.prop}"/>
        <property name="password" value="${redis.pass.prop}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
        <property name="usePool" value="true"/>
    </bean>

    <!-- 操作模版-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <!-- Redis工具 -->
    <bean id="redisUtils" class="com.blocain.bitms.tools.utils.RedisUtils">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>

</beans>