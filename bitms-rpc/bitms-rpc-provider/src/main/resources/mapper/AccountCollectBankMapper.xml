<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blocain.bitms.trade.fund.mapper.AccountCollectBankMapper">
    <!-- 基础列 -->
    <sql id="accountCollectBankColumns">
        a.id as id,
        a.accountId as accountId,
        a.stockinfoId as stockinfoId,
        a.bankName as bankName,
        a.cardNo as cardNo,
        a.swiftBic as swiftBic,
        a.sign as sign,
        a.randomKey as randomKey,
        a.remark as remark,
        a.createBy as createBy,
        a.createDate as createDate
    </sql>

    <sql id="accountCollectBankJoinColumns">
        a.id as id,
        a.accountId as accountId,
        a.stockinfoId as stockinfoId,
        a.bankName as bankName,
        a.cardNo as cardNo,
        a.swiftBic as swiftBic,
        a.sign as sign,
        a.randomKey as randomKey,
        a.remark as remark,
        a.createBy as createBy,
        a.createDate as createDate,
        b.accountName as accountName,
        c.stockCode as stockCode
    </sql>

    <resultMap id="accountCollectBankResultMap" type="com.blocain.bitms.trade.fund.entity.AccountCollectBank">
        <id column="id" property="id" />
        <result column="accountId" property="accountId"/>
        <result column="stockinfoId" property="stockinfoId"/>
        <result column="bankName" property="bankName"/>
        <result column="cardNo" property="cardNo"/>
        <result column="swiftBic" property="swiftBic"/>
        <result column="sign" property="sign"/>
        <result column="randomKey" property="randomKey"/>
        <result column="remark" property="remark"/>
        <result column="createBy" property="createBy"/>
        <result column="createDate" property="createDate"/>
    </resultMap>

    <!-- 普通插入 -->
    <insert id="insert" parameterType="com.blocain.bitms.trade.fund.entity.AccountCollectBank">
        insert into AccountCollectBank(
            id ,
            accountId ,
            stockinfoId ,
            bankName ,
            cardNo ,
            swiftBic ,
            sign ,
            randomKey ,
            remark ,
            createBy ,
            createDate 
        ) VALUES (
            #{id} ,
            #{accountId} ,
            #{stockinfoId} ,
            #{bankName} ,
            #{cardNo} ,
            #{swiftBic} ,
            #{sign} ,
            #{randomKey} ,
            #{remark} ,
            #{createBy} ,
            #{createDate} 
        )
    </insert>
    <!-- 根据主键物理删除 -->
    <delete id="remove" parameterType="java.lang.Long">
        delete from AccountCollectBank where id = #{id}
    </delete>

    <!-- 根据主键逻辑删除 -->
    <delete id="delete" parameterType="java.lang.Long">
           delete from AccountCollectBank where id = #{id}
    </delete>

    <!--根据条件是否插入数据 -->
    <insert id="insertSelective" parameterType="com.blocain.bitms.trade.fund.entity.AccountCollectBank">
        insert into AccountCollectBank
        <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">
                id ,
        </if>
        <if test="accountId != null">
                accountId ,
        </if>
        <if test="stockinfoId != null">
                stockinfoId ,
        </if>
        <if test="bankName != null">
                bankName ,
        </if>
        <if test="cardNo != null">
                cardNo ,
        </if>
        <if test="swiftBic != null">
                swiftBic ,
        </if>
        <if test="sign != null">
                sign ,
        </if>
        <if test="randomKey != null">
                randomKey ,
        </if>
        <if test="remark != null">
                remark ,
        </if>
        <if test="createBy != null">
                createBy ,
        </if>
        <if test="createDate != null">
                createDate 
        </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="id != null">
                #{id} ,
        </if>
        <if test="accountId != null">
                #{accountId} ,
        </if>
        <if test="stockinfoId != null">
                #{stockinfoId} ,
        </if>
        <if test="bankName != null">
                #{bankName} ,
        </if>
        <if test="cardNo != null">
                #{cardNo} ,
        </if>
        <if test="swiftBic != null">
                #{swiftBic} ,
        </if>
        <if test="sign != null">
                #{sign} ,
        </if>
        <if test="randomKey != null">
                #{randomKey} ,
        </if>
        <if test="remark != null">
                #{remark} ,
        </if>
        <if test="createBy != null">
                #{createBy} ,
        </if>
        <if test="createDate != null">
                #{createDate} 
        </if>
        </trim>
    </insert>

    <!-- 选择性更新数据 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.blocain.bitms.trade.fund.entity.AccountCollectBank">
        update AccountCollectBank
           <set>
            <if test="accountId != null">
                accountId = #{accountId} ,
            </if>
            <if test="stockinfoId != null">
                stockinfoId = #{stockinfoId} ,
            </if>
            <if test="bankName != null">
                bankName = #{bankName} ,
            </if>
            <if test="cardNo != null">
                cardNo = #{cardNo} ,
            </if>
            <if test="swiftBic != null">
                swiftBic = #{swiftBic} ,
            </if>
            <if test="sign != null">
                sign = #{sign} ,
            </if>
            <if test="randomKey != null">
                randomKey = #{randomKey} ,
            </if>
            <if test="remark != null">
                remark = #{remark} ,
            </if>
            <if test="createBy != null">
                createBy = #{createBy} ,
            </if>
            <if test="createDate != null">
                createDate = #{createDate} 
            </if>
           </set>
        where id = #{id}
    </update>

    <!-- 批量插入 -->
    <insert id="insertBatch" parameterType="list">
        insert into AccountCollectBank(
            id ,
            accountId ,
            stockinfoId ,
            bankName ,
            cardNo ,
            swiftBic ,
            sign ,
            randomKey ,
            remark ,
            createBy ,
            createDate 
        )
        <foreach close=")" collection="list" item="item" index="index" open="(" separator="union">
            select
            #{item.id} ,
            #{item.accountId} ,
            #{item.stockinfoId} ,
            #{item.bankName} ,
            #{item.cardNo} ,
            #{item.swiftBic} ,
            #{item.sign} ,
            #{item.randomKey} ,
            #{item.remark} ,
            #{item.createBy} ,
            #{item.createDate} 
            from dual
        </foreach>
    </insert>

    <!-- 批量修改 -->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
            update AccountCollectBank set
            accountId = #{item.accountId} ,
            stockinfoId = #{item.stockinfoId} ,
            bankName = #{item.bankName} ,
            cardNo = #{item.cardNo} ,
            swiftBic = #{item.swiftBic} ,
            sign = #{item.sign} ,
            randomKey = #{item.randomKey} ,
            remark = #{item.remark} ,
            createBy = #{item.createBy} ,
            createDate = #{item.createDate} 
            where id = #{item.id}
        </foreach>
    </update>

    <!-- 根据主键更新一条信息所有数据 -->
    <update id="updateByPrimaryKey" parameterType="com.blocain.bitms.trade.fund.entity.AccountCollectBank">
        update AccountCollectBank set
            accountId = #{accountId} ,
            stockinfoId = #{stockinfoId} ,
            bankName = #{bankName} ,
            cardNo = #{cardNo} ,
            swiftBic = #{swiftBic} ,
            sign = #{sign} ,
            randomKey = #{randomKey} ,
            remark = #{remark} ,
            createBy = #{createBy} ,
            createDate = #{createDate} 
        where id = #{id}
    </update>

    <!-- 根据主键取数据 -->
    <select id="selectByPrimaryKey"  parameterType="java.lang.Long" resultType="com.blocain.bitms.trade.fund.entity.AccountCollectBank">
        select <include refid="accountCollectBankColumns"/> from AccountCollectBank a where a.id = #{id}
    </select>

    <!-- 可分页的对象查询 -->
    <select id="findList" resultType="com.blocain.bitms.trade.fund.entity.AccountCollectBank">
        SELECT
        <include refid="accountCollectBankColumns"/>
        FROM AccountCollectBank a
        WHERE 1=1
        <if test="accountName != null and accountName != ''">
            and ( b.accountName like '%'||#{accountName}||'%' b.unid like '%'||#{accountName}||'%')
        </if>
        <if test="bankName != null">
            and a.bankName like '%'||#{bankName}||'%'
        </if>
        <if test="accountId != null">
            and a.accountId = #{accountId}
        </if>
        <if test="cardNo != null">
            and a.cardNo like '%'||#{cardNo}||'%'
        </if>
        <if test="swiftBic != null">
            and a.swiftBic like '%'||#{swiftBic}||'%'
        </if>
        <if test="randomKey != null">
            and a.randomKey like '%'||#{randomKey}||'%'
        </if>
    </select>

    <!-- 查询所有 -->
    <select id="selectAll" resultType="com.blocain.bitms.trade.fund.entity.AccountCollectBank">
        SELECT
        <include refid="accountCollectBankColumns"/>
        FROM AccountCollectBank a WHERE 1=1
    </select>


</mapper>

