<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blocain.bitms.trade.fund.mapper.AccountCandyRecordMapper">
    <!-- 基础列 -->
    <sql id="accountCandyRecordColumns">
        a.id as id,
        a.accountId as accountId,
        a.accountAssetType as accountAssetType,
        a.accountAssetId as accountAssetId,
        a.currentDate as currentDate,
        a.businessFlag as businessFlag,
        a.stockinfoId as stockinfoId,
        a.relatedStockinfoId as relatedStockinfoId,
        a.occurDirect as occurDirect,
        a.orgAmt as orgAmt,
        a.occurAmt as occurAmt,
        a.lastAmt as lastAmt,
        a.status as status,
        a.remark as remark
    </sql>

    <sql id="accountCandyRecordJoinColumns">
        a.id as id,
        a.accountId as accountId,
        a.accountAssetType as accountAssetType,
        a.accountAssetId as accountAssetId,
        a.currentDate as currentDate,
        a.businessFlag as businessFlag,
        a.stockinfoId as stockinfoId,
        a.relatedStockinfoId as relatedStockinfoId,
        a.occurDirect as occurDirect,
        a.orgAmt as orgAmt,
        a.occurAmt as occurAmt,
        a.lastAmt as lastAmt,
        a.status as status,
        a.remark as remark,
        b.accountName as accountName,
        c.stockCode as stockCode
    </sql>


    <resultMap id="accountCandyRecordResultMap" type="com.blocain.bitms.trade.fund.entity.AccountCandyRecord">
        <id column="id" property="id"/>
        <result column="accountId" property="accountId"/>
        <result column="accountAssetType" property="accountAssetType"/>
        <result column="accountAssetId" property="accountAssetId"/>
        <result column="currentDate" property="currentDate"/>
        <result column="businessFlag" property="businessFlag"/>
        <result column="stockinfoId" property="stockinfoId"/>
        <result column="relatedStockinfoId" property="relatedStockinfoId"/>
        <result column="occurDirect" property="occurDirect"/>
        <result column="orgAmt" property="orgAmt"/>
        <result column="occurAmt" property="occurAmt"/>
        <result column="lastAmt" property="lastAmt"/>
        <result column="status" property="status"/>
        <result column="remark" property="remark"/>
    </resultMap>

    <!-- 普通插入 -->
    <insert id="insert" parameterType="com.blocain.bitms.trade.fund.entity.AccountCandyRecord">
        insert into AccountCandyRecord(
            id ,
            accountId ,
            accountAssetType ,
            accountAssetId ,
            currentDate ,
            businessFlag ,
            stockinfoId ,
            relatedStockinfoId ,
            occurDirect ,
            orgAmt ,
            occurAmt ,
            lastAmt ,
            status ,
            remark 
        ) VALUES (
            #{id} ,
            #{accountId} ,
            #{accountAssetType} ,
            #{accountAssetId} ,
            #{currentDate} ,
            #{businessFlag} ,
            #{stockinfoId} ,
            #{relatedStockinfoId} ,
            #{occurDirect} ,
            #{orgAmt} ,
            #{occurAmt} ,
            #{lastAmt} ,
            #{status} ,
            #{remark} 
        )
    </insert>
    <!-- 根据主键物理删除 -->
    <delete id="remove" parameterType="java.lang.Long">
        delete from AccountCandyRecord where id = #{id}
    </delete>

    <!-- 根据主键逻辑删除 -->
    <update id="delete" parameterType="java.lang.Long">
        update AccountCandyRecord set delFlag = 1 where id = #{id}
    </update>

    <!--根据条件是否插入数据 -->
    <insert id="insertSelective" parameterType="com.blocain.bitms.trade.fund.entity.AccountCandyRecord">
        insert into AccountCandyRecord
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id ,
            </if>
            <if test="accountId != null">
                accountId ,
            </if>
            <if test="accountAssetType != null">
                accountAssetType ,
            </if>
            <if test="accountAssetId != null">
                accountAssetId ,
            </if>
            <if test="currentDate != null">
                currentDate ,
            </if>
            <if test="businessFlag != null">
                businessFlag ,
            </if>
            <if test="stockinfoId != null">
                stockinfoId ,
            </if>
            <if test="relatedStockinfoId != null">
                relatedStockinfoId ,
            </if>
            <if test="occurDirect != null">
                occurDirect ,
            </if>
            <if test="orgAmt != null">
                orgAmt ,
            </if>
            <if test="occurAmt != null">
                occurAmt ,
            </if>
            <if test="lastAmt != null">
                lastAmt ,
            </if>
            <if test="status != null">
                status ,
            </if>
            <if test="remark != null">
                remark
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id} ,
            </if>
            <if test="accountId != null">
                #{accountId} ,
            </if>
            <if test="accountAssetType != null">
                #{accountAssetType} ,
            </if>
            <if test="accountAssetId != null">
                #{accountAssetId} ,
            </if>
            <if test="currentDate != null">
                #{currentDate} ,
            </if>
            <if test="businessFlag != null">
                #{businessFlag} ,
            </if>
            <if test="stockinfoId != null">
                #{stockinfoId} ,
            </if>
            <if test="relatedStockinfoId != null">
                #{relatedStockinfoId} ,
            </if>
            <if test="occurDirect != null">
                #{occurDirect} ,
            </if>
            <if test="orgAmt != null">
                #{orgAmt} ,
            </if>
            <if test="occurAmt != null">
                #{occurAmt} ,
            </if>
            <if test="lastAmt != null">
                #{lastAmt} ,
            </if>
            <if test="status != null">
                #{status} ,
            </if>
            <if test="remark != null">
                #{remark}
            </if>
        </trim>
    </insert>

    <!-- 选择性更新数据 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.blocain.bitms.trade.fund.entity.AccountCandyRecord">
        update AccountCandyRecord
        <set>
            <if test="accountId != null">
                accountId = #{accountId} ,
            </if>
            <if test="accountAssetType != null">
                accountAssetType = #{accountAssetType} ,
            </if>
            <if test="accountAssetId != null">
                accountAssetId = #{accountAssetId} ,
            </if>
            <if test="currentDate != null">
                currentDate = #{currentDate} ,
            </if>
            <if test="businessFlag != null">
                businessFlag = #{businessFlag} ,
            </if>
            <if test="stockinfoId != null">
                stockinfoId = #{stockinfoId} ,
            </if>
            <if test="relatedStockinfoId != null">
                relatedStockinfoId = #{relatedStockinfoId} ,
            </if>
            <if test="occurDirect != null">
                occurDirect = #{occurDirect} ,
            </if>
            <if test="orgAmt != null">
                orgAmt = #{orgAmt} ,
            </if>
            <if test="occurAmt != null">
                occurAmt = #{occurAmt} ,
            </if>
            <if test="lastAmt != null">
                lastAmt = #{lastAmt} ,
            </if>
            <if test="status != null">
                status = #{status} ,
            </if>
            <if test="remark != null">
                remark = #{remark}
            </if>
        </set>
        where id = #{id}
    </update>

    <!-- 批量插入 -->
    <insert id="insertBatch" parameterType="list">
        insert into AccountCandyRecord(
        id ,
        accountId ,
        accountAssetType ,
        accountAssetId ,
        currentDate ,
        businessFlag ,
        stockinfoId ,
        relatedStockinfoId ,
        occurDirect ,
        orgAmt ,
        occurAmt ,
        lastAmt ,
        status ,
        remark
        )
        <foreach close=")" collection="list" item="item" index="index" open="(" separator="union">
            select
            #{item.id} ,
            #{item.accountId} ,
            #{item.accountAssetType} ,
            #{item.accountAssetId} ,
            #{item.currentDate} ,
            #{item.businessFlag} ,
            #{item.stockinfoId} ,
            #{item.relatedStockinfoId} ,
            #{item.occurDirect} ,
            #{item.orgAmt} ,
            #{item.occurAmt} ,
            #{item.lastAmt} ,
            #{item.status} ,
            #{item.remark}
            from dual
        </foreach>
    </insert>

    <!-- 批量修改 -->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
            update AccountCandyRecord set
            accountId = #{item.accountId} ,
            accountAssetType = #{item.accountAssetType} ,
            accountAssetId = #{item.accountAssetId} ,
            currentDate = #{item.currentDate} ,
            businessFlag = #{item.businessFlag} ,
            stockinfoId = #{item.stockinfoId} ,
            relatedStockinfoId = #{item.relatedStockinfoId} ,
            occurDirect = #{item.occurDirect} ,
            orgAmt = #{item.orgAmt} ,
            occurAmt = #{item.occurAmt} ,
            lastAmt = #{item.lastAmt} ,
            status = #{item.status} ,
            remark = #{item.remark}
            where id = #{item.id}
        </foreach>
    </update>

    <!-- 根据主键更新一条信息所有数据 -->
    <update id="updateByPrimaryKey" parameterType="com.blocain.bitms.trade.fund.entity.AccountCandyRecord">
        update AccountCandyRecord set
            accountId = #{accountId} ,
            accountAssetType = #{accountAssetType} ,
            accountAssetId = #{accountAssetId} ,
            currentDate = #{currentDate} ,
            businessFlag = #{businessFlag} ,
            stockinfoId = #{stockinfoId} ,
            relatedStockinfoId = #{relatedStockinfoId} ,
            occurDirect = #{occurDirect} ,
            orgAmt = #{orgAmt} ,
            occurAmt = #{occurAmt} ,
            lastAmt = #{lastAmt} ,
            status = #{status} ,
            remark = #{remark} 
        where id = #{id}
    </update>

    <!-- 根据主键取数据 -->
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.blocain.bitms.trade.fund.entity.AccountCandyRecord">
        select
        <include refid="accountCandyRecordColumns"/>
        from AccountCandyRecord a where a.id = #{id}
    </select>

    <!-- 查询最后一条记录 -->
    <select id="findLastRecord" parameterType="java.lang.Long" resultType="com.blocain.bitms.trade.fund.entity.AccountCandyRecord">
        select
        <include refid="accountCandyRecordColumns"/>
        from (select * from AccountCandyRecord b where b.stockinfoId=#{stockinfoId} order by b.currentDate desc) a where rownum=1
    </select>
    <!-- 按日期查找是否已经奖励 -->
    <select id="findRecordByDateStrng" resultType="com.blocain.bitms.trade.fund.entity.AccountCandyRecord">
        select
        <include refid="accountCandyRecordColumns"/>
        from AccountCandyRecord a where a.stockinfoId=#{stockinfoId} and a.accountId=#{accountId} and to_char(a.currentDate,'yyyy-mm-dd')=#{dateStr}
    </select>
    <!-- 可分页的对象查询 -->
    <select id="findList" resultType="com.blocain.bitms.trade.fund.entity.AccountCandyRecord">
        SELECT
        <include refid="accountCandyRecordJoinColumns"/>
        FROM AccountCandyRecord a
        left join account b on b.id=a.accountid
        left join stockinfo c on c.id = a.stockinfoId
        WHERE 1=1
        <if test="accountId != null">
            and a.accountId = #{accountId}
        </if>
        <if test="accountName != null and accountName!=''">
            and b.accountName = #{accountName}
        </if>
        <if test="accountAssetType != null and accountAssetType!=''">
            and a.accountAssetType = #{accountAssetType}
        </if>
        <if test="businessFlag != null and businessFlag!=''">
            and a.businessFlag =#{businessFlag}
        </if>
        <if test="stockinfoId != null">
            and a.stockinfoId = #{stockinfoId}
        </if>
        <if test="relatedStockinfoId != null">
            and a.relatedStockinfoId = #{relatedStockinfoId}
        </if>
        <if test="occurDirect != null and occurDirect!=''">
            and a.occurDirect = #{occurDirect}
        </if>
        <if test="timeStart != null">
            and a.currentDate &gt;=to_date(#{timeStart},'YYYY-MM-DD hh24:mi:ss')
        </if>
        <if test="timeEnd != null">
            and a.currentDate &lt;=to_date(#{timeEnd},'YYYY-MM-DD hh24:mi:ss')
        </if>
        order by a.currentDate desc
    </select>

    <!-- 查询所有 -->
    <select id="selectAll" resultType="com.blocain.bitms.trade.fund.entity.AccountCandyRecord">
        SELECT
        <include refid="accountCandyRecordColumns"/>
        FROM AccountCandyRecord a WHERE 1=1
    </select>


</mapper>

