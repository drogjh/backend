<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blocain.bitms.trade.fund.mapper.AccountWithdrawRecordERC20Mapper">
    <!-- 基础列 -->
    <sql id="accountWithdrawRecordERC20Columns">
        a.id as id,
        a.accountId as accountId,
        a.accountAssetType as accountAssetType,
        a.accountAssetId as accountAssetId,
        a.currentDate as currentDate,
        a.businessFlag as businessFlag,
        a.stockinfoId as stockinfoId,
        a.relatedStockinfoId as relatedStockinfoId,
        a.contractAmt as contractAmt,
        a.occurDirect as occurDirect,
        a.orgAmt as orgAmt,
        a.occurAmt as occurAmt,
        a.lastAmt as lastAmt,
        a.forzenOrgAmt as forzenOrgAmt,
        a.occurForzenAmt as occurForzenAmt,
        a.forzenLastAmt as forzenLastAmt,
        a.transId as transId,
        a.chargeAddr as chargeAddr,
        a.withdrawAddr as withdrawAddr,
        a.fee as fee,
        a.netFee as netFee,
        a.status as status,
        a.approveStatus as approveStatus,
        a.collectStatus as collectStatus,
        a.transferStatus as transferStatus,
        a.confirmStatus as confirmStatus,
        a.originalBusinessId as originalBusinessId,
        a.remark as remark,
        a.createBy as createBy,
        a.createDate as createDate,
        a.auditBy as auditBy,
        a.auditDate as auditDate,
        a.checkBy as checkBy,
        a.checkDate as checkDate
    </sql>

    <sql id="accountWithdrawRecordERC20JoinColumns">
        a.id as id,
        a.accountId as accountId,
        a.accountAssetType as accountAssetType,
        a.accountAssetId as accountAssetId,
        a.currentDate as currentDate,
        a.businessFlag as businessFlag,
        a.stockinfoId as stockinfoId,
        a.relatedStockinfoId as relatedStockinfoId,
        a.contractAmt as contractAmt,
        a.occurDirect as occurDirect,
        a.orgAmt as orgAmt,
        a.occurAmt as occurAmt,
        a.lastAmt as lastAmt,
        a.forzenOrgAmt as forzenOrgAmt,
        a.occurForzenAmt as occurForzenAmt,
        a.forzenLastAmt as forzenLastAmt,
        a.transId as transId,
        a.chargeAddr as chargeAddr,
        a.withdrawAddr as withdrawAddr,
        a.fee as fee,
        a.netFee as netFee,
        a.status as status,
        a.approveStatus as approveStatus,
        a.collectStatus as collectStatus,
        a.transferStatus as transferStatus,
        a.confirmStatus as confirmStatus,
        a.originalBusinessId as originalBusinessId,
        a.remark as remark,
        a.createBy as createBy,
        a.createDate as createDate,
        a.auditBy as auditBy,
        a.auditDate as auditDate,
        a.checkBy as checkBy,
        a.checkDate as checkDate,
        b.accountName as accountName,
        c.stockCode as stockCode
    </sql>

    <resultMap id="accountWithdrawRecordERC20ResultMap" type="com.blocain.bitms.trade.fund.entity.AccountWithdrawRecordERC20">
        <id column="id" property="id" />
        <result column="accountId" property="accountId"/>
        <result column="accountAssetType" property="accountAssetType"/>
        <result column="accountAssetId" property="accountAssetId"/>
        <result column="currentDate" property="currentDate"/>
        <result column="businessFlag" property="businessFlag"/>
        <result column="stockinfoId" property="stockinfoId"/>
        <result column="relatedStockinfoId" property="relatedStockinfoId"/>
        <result column="contractAmt" property="contractAmt"/>
        <result column="occurDirect" property="occurDirect"/>
        <result column="orgAmt" property="orgAmt"/>
        <result column="occurAmt" property="occurAmt"/>
        <result column="lastAmt" property="lastAmt"/>
        <result column="forzenOrgAmt" property="forzenOrgAmt"/>
        <result column="occurForzenAmt" property="occurForzenAmt"/>
        <result column="forzenLastAmt" property="forzenLastAmt"/>
        <result column="transId" property="transId"/>
        <result column="chargeAddr" property="chargeAddr"/>
        <result column="withdrawAddr" property="withdrawAddr"/>
        <result column="fee" property="fee"/>
        <result column="netFee" property="netFee"/>
        <result column="status" property="status"/>
        <result column="approveStatus" property="approveStatus"/>
        <result column="collectStatus" property="collectStatus"/>
        <result column="transferStatus" property="transferStatus"/>
        <result column="confirmStatus" property="confirmStatus"/>
        <result column="originalBusinessId" property="originalBusinessId"/>
        <result column="remark" property="remark"/>
        <result column="createBy" property="createBy"/>
        <result column="createDate" property="createDate"/>
        <result column="auditBy" property="auditBy"/>
        <result column="auditDate" property="auditDate"/>
        <result column="checkBy" property="checkBy"/>
        <result column="checkDate" property="checkDate"/>
    </resultMap>

    <!-- 普通插入 -->
    <insert id="insert" parameterType="com.blocain.bitms.trade.fund.entity.AccountWithdrawRecordERC20">
        insert into AccountWithdrawRecordERC20(
            id ,
            accountId ,
            accountAssetType ,
            accountAssetId ,
            currentDate ,
            businessFlag ,
            stockinfoId ,
            relatedStockinfoId ,
            contractAmt ,
            occurDirect ,
            orgAmt ,
            occurAmt ,
            lastAmt ,
            forzenOrgAmt ,
            occurForzenAmt ,
            forzenLastAmt ,
            transId ,
            chargeAddr ,
            withdrawAddr ,
            fee ,
            netFee ,
            status ,
            approveStatus ,
            collectStatus ,
            transferStatus ,
            confirmStatus,
            originalBusinessId ,
            remark ,
            createBy ,
            createDate ,
            auditBy ,
            auditDate ,
            checkBy ,
            checkDate 
        ) VALUES (
            #{id} ,
            #{accountId} ,
            #{accountAssetType} ,
            #{accountAssetId} ,
            #{currentDate} ,
            #{businessFlag} ,
            #{stockinfoId} ,
            #{relatedStockinfoId} ,
            #{contractAmt} ,
            #{occurDirect} ,
            #{orgAmt} ,
            #{occurAmt} ,
            #{lastAmt} ,
            #{forzenOrgAmt} ,
            #{occurForzenAmt} ,
            #{forzenLastAmt} ,
            #{transId} ,
            #{chargeAddr} ,
            #{withdrawAddr} ,
            #{fee} ,
            #{netFee} ,
            #{status} ,
            #{approveStatus} ,
            #{collectStatus} ,
            #{transferStatus} ,
            #{confirmStatus},
            #{originalBusinessId} ,
            #{remark} ,
            #{createBy} ,
            #{createDate} ,
            #{auditBy} ,
            #{auditDate} ,
            #{checkBy} ,
            #{checkDate} 
        )
    </insert>
    <!-- 根据主键物理删除 -->
    <delete id="remove" parameterType="java.lang.Long">
        delete from AccountWithdrawRecordERC20 where id = #{id}
    </delete>

    <!-- 根据主键逻辑删除 -->
    <update id="delete" parameterType="java.lang.Long">
        update AccountWithdrawRecordERC20 set delFlag = 1 where id = #{id}
    </update>

    <!--根据条件是否插入数据 -->
    <insert id="insertSelective" parameterType="com.blocain.bitms.trade.fund.entity.AccountWithdrawRecordERC20">
        insert into AccountWithdrawRecordERC20
        <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="id != null">
                id ,
        </if>
        <if test="accountId != null">
                accountId ,
        </if>
        <if test="accountAssetType != null">
                accountAssetType ,
        </if>
        <if test="accountAssetId != null">
                accountAssetId ,
        </if>
        <if test="currentDate != null">
                currentDate ,
        </if>
        <if test="businessFlag != null">
                businessFlag ,
        </if>
        <if test="stockinfoId != null">
                stockinfoId ,
        </if>
        <if test="relatedStockinfoId != null">
                relatedStockinfoId ,
        </if>
        <if test="contractAmt != null">
                contractAmt ,
        </if>
        <if test="occurDirect != null">
                occurDirect ,
        </if>
        <if test="orgAmt != null">
                orgAmt ,
        </if>
        <if test="occurAmt != null">
                occurAmt ,
        </if>
        <if test="lastAmt != null">
                lastAmt ,
        </if>
        <if test="forzenOrgAmt != null">
                forzenOrgAmt ,
        </if>
        <if test="occurForzenAmt != null">
                occurForzenAmt ,
        </if>
        <if test="forzenLastAmt != null">
                forzenLastAmt ,
        </if>
        <if test="transId != null">
                transId ,
        </if>
        <if test="chargeAddr != null">
                chargeAddr ,
        </if>
        <if test="withdrawAddr != null">
                withdrawAddr ,
        </if>
        <if test="fee != null">
                fee ,
        </if>
        <if test="netFee != null">
                netFee ,
        </if>
        <if test="status != null">
                status ,
        </if>
        <if test="approveStatus != null">
                approveStatus ,
        </if>
        <if test="collectStatus != null">
                collectStatus ,
        </if>
        <if test="transferStatus != null">
                transferStatus ,
        </if>
        <if test="confirmStatus != null">
            confirmStatus,
        </if>
        <if test="originalBusinessId != null">
                originalBusinessId ,
        </if>
        <if test="remark != null">
                remark ,
        </if>
        <if test="createBy != null">
                createBy ,
        </if>
        <if test="createDate != null">
                createDate ,
        </if>
        <if test="auditBy != null">
                auditBy ,
        </if>
        <if test="auditDate != null">
                auditDate ,
        </if>
        <if test="checkBy != null">
                checkBy ,
        </if>
        <if test="checkDate != null">
                checkDate 
        </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="id != null">
                #{id} ,
        </if>
        <if test="accountId != null">
                #{accountId} ,
        </if>
        <if test="accountAssetType != null">
                #{accountAssetType} ,
        </if>
        <if test="accountAssetId != null">
                #{accountAssetId} ,
        </if>
        <if test="currentDate != null">
                #{currentDate} ,
        </if>
        <if test="businessFlag != null">
                #{businessFlag} ,
        </if>
        <if test="stockinfoId != null">
                #{stockinfoId} ,
        </if>
        <if test="relatedStockinfoId != null">
                #{relatedStockinfoId} ,
        </if>
        <if test="contractAmt != null">
                #{contractAmt} ,
        </if>
        <if test="occurDirect != null">
                #{occurDirect} ,
        </if>
        <if test="orgAmt != null">
                #{orgAmt} ,
        </if>
        <if test="occurAmt != null">
                #{occurAmt} ,
        </if>
        <if test="lastAmt != null">
                #{lastAmt} ,
        </if>
        <if test="forzenOrgAmt != null">
                #{forzenOrgAmt} ,
        </if>
        <if test="occurForzenAmt != null">
                #{occurForzenAmt} ,
        </if>
        <if test="forzenLastAmt != null">
                #{forzenLastAmt} ,
        </if>
        <if test="transId != null">
                #{transId} ,
        </if>
        <if test="chargeAddr != null">
                #{chargeAddr} ,
        </if>
        <if test="withdrawAddr != null">
                #{withdrawAddr} ,
        </if>
        <if test="fee != null">
                #{fee} ,
        </if>
        <if test="netFee != null">
                #{netFee} ,
        </if>
        <if test="status != null">
                #{status} ,
        </if>
        <if test="approveStatus != null">
                #{approveStatus} ,
        </if>
        <if test="collectStatus != null">
                #{collectStatus} ,
        </if>
        <if test="transferStatus != null">
                #{transferStatus} ,
        </if>
        <if test="confirmStatus != null">
            #{confirmStatus},
        </if>
        <if test="originalBusinessId != null">
                #{originalBusinessId} ,
        </if>
        <if test="remark != null">
                #{remark} ,
        </if>
        <if test="createBy != null">
                #{createBy} ,
        </if>
        <if test="createDate != null">
                #{createDate} ,
        </if>
        <if test="auditBy != null">
                #{auditBy} ,
        </if>
        <if test="auditDate != null">
                #{auditDate} ,
        </if>
        <if test="checkBy != null">
                #{checkBy} ,
        </if>
        <if test="checkDate != null">
                #{checkDate} 
        </if>
        </trim>
    </insert>

    <!-- 选择性更新数据 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.blocain.bitms.trade.fund.entity.AccountWithdrawRecordERC20">
        update AccountWithdrawRecordERC20
           <set>
            <if test="accountId != null">
                accountId = #{accountId} ,
            </if>
            <if test="accountAssetType != null">
                accountAssetType = #{accountAssetType} ,
            </if>
            <if test="accountAssetId != null">
                accountAssetId = #{accountAssetId} ,
            </if>
            <if test="currentDate != null">
                currentDate = #{currentDate} ,
            </if>
            <if test="businessFlag != null">
                businessFlag = #{businessFlag} ,
            </if>
            <if test="stockinfoId != null">
                stockinfoId = #{stockinfoId} ,
            </if>
            <if test="relatedStockinfoId != null">
                relatedStockinfoId = #{relatedStockinfoId} ,
            </if>
            <if test="contractAmt != null">
                contractAmt = #{contractAmt} ,
            </if>
            <if test="occurDirect != null">
                occurDirect = #{occurDirect} ,
            </if>
            <if test="orgAmt != null">
                orgAmt = #{orgAmt} ,
            </if>
            <if test="occurAmt != null">
                occurAmt = #{occurAmt} ,
            </if>
            <if test="lastAmt != null">
                lastAmt = #{lastAmt} ,
            </if>
            <if test="forzenOrgAmt != null">
                forzenOrgAmt = #{forzenOrgAmt} ,
            </if>
            <if test="occurForzenAmt != null">
                occurForzenAmt = #{occurForzenAmt} ,
            </if>
            <if test="forzenLastAmt != null">
                forzenLastAmt = #{forzenLastAmt} ,
            </if>
            <if test="transId != null">
                transId = #{transId} ,
            </if>
            <if test="chargeAddr != null">
                chargeAddr = #{chargeAddr} ,
            </if>
            <if test="withdrawAddr != null">
                withdrawAddr = #{withdrawAddr} ,
            </if>
            <if test="fee != null">
                fee = #{fee} ,
            </if>
            <if test="netFee != null">
                netFee = #{netFee} ,
            </if>
            <if test="status != null">
                status = #{status} ,
            </if>
            <if test="approveStatus != null">
                approveStatus = #{approveStatus} ,
            </if>
            <if test="collectStatus != null">
                collectStatus = #{collectStatus} ,
            </if>
            <if test="transferStatus != null">
                transferStatus = #{transferStatus} ,
            </if>
            <if test="confirmStatus != null">
                confirmStatus = #{confirmStatus},
            </if>
            <if test="originalBusinessId != null">
                originalBusinessId = #{originalBusinessId} ,
            </if>
            <if test="remark != null">
                remark = #{remark} ,
            </if>
            <if test="createBy != null">
                createBy = #{createBy} ,
            </if>
            <if test="createDate != null">
                createDate = #{createDate} ,
            </if>
            <if test="auditBy != null">
                auditBy = #{auditBy} ,
            </if>
            <if test="auditDate != null">
                auditDate = #{auditDate} ,
            </if>
            <if test="checkBy != null">
                checkBy = #{checkBy} ,
            </if>
            <if test="checkDate != null">
                checkDate = #{checkDate} 
            </if>
           </set>
        where id = #{id}
    </update>

    <!-- 批量插入 -->
    <insert id="insertBatch" parameterType="list">
        insert into AccountWithdrawRecordERC20(
            id ,
            accountId ,
            accountAssetType ,
            accountAssetId ,
            currentDate ,
            businessFlag ,
            stockinfoId ,
            relatedStockinfoId ,
            contractAmt ,
            occurDirect ,
            orgAmt ,
            occurAmt ,
            lastAmt ,
            forzenOrgAmt ,
            occurForzenAmt ,
            forzenLastAmt ,
            transId ,
            chargeAddr ,
            withdrawAddr ,
            fee ,
            netFee ,
            status ,
            approveStatus ,
            collectStatus ,
            transferStatus ,
            confirmStatus,
            originalBusinessId ,
            remark ,
            createBy ,
            createDate ,
            auditBy ,
            auditDate ,
            checkBy ,
            checkDate 
        )
        <foreach close=")" collection="list" item="item" index="index" open="(" separator="union">
            select
            #{item.id} ,
            #{item.accountId} ,
            #{item.accountAssetType} ,
            #{item.accountAssetId} ,
            #{item.currentDate} ,
            #{item.businessFlag} ,
            #{item.stockinfoId} ,
            #{item.relatedStockinfoId} ,
            #{item.contractAmt} ,
            #{item.occurDirect} ,
            #{item.orgAmt} ,
            #{item.occurAmt} ,
            #{item.lastAmt} ,
            #{item.forzenOrgAmt} ,
            #{item.occurForzenAmt} ,
            #{item.forzenLastAmt} ,
            #{item.transId} ,
            #{item.chargeAddr} ,
            #{item.withdrawAddr} ,
            #{item.fee} ,
            #{item.netFee} ,
            #{item.status} ,
            #{item.approveStatus} ,
            #{item.collectStatus} ,
            #{item.transferStatus} ,
            #{item.confirmStatus},
            #{item.originalBusinessId} ,
            #{item.remark} ,
            #{item.createBy} ,
            #{item.createDate} ,
            #{item.auditBy} ,
            #{item.auditDate} ,
            #{item.checkBy} ,
            #{item.checkDate} 
            from dual
        </foreach>
    </insert>

    <!-- 批量修改 -->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
            update AccountWithdrawRecordERC20 set
            accountId = #{item.accountId} ,
            accountAssetType = #{item.accountAssetType} ,
            accountAssetId = #{item.accountAssetId} ,
            currentDate = #{item.currentDate} ,
            businessFlag = #{item.businessFlag} ,
            stockinfoId = #{item.stockinfoId} ,
            relatedStockinfoId = #{item.relatedStockinfoId} ,
            contractAmt = #{item.contractAmt} ,
            occurDirect = #{item.occurDirect} ,
            orgAmt = #{item.orgAmt} ,
            occurAmt = #{item.occurAmt} ,
            lastAmt = #{item.lastAmt} ,
            forzenOrgAmt = #{item.forzenOrgAmt} ,
            occurForzenAmt = #{item.occurForzenAmt} ,
            forzenLastAmt = #{item.forzenLastAmt} ,
            transId = #{item.transId} ,
            chargeAddr = #{item.chargeAddr} ,
            withdrawAddr = #{item.withdrawAddr} ,
            fee = #{item.fee} ,
            netFee = #{item.netFee} ,
            status = #{item.status} ,
            approveStatus = #{item.approveStatus} ,
            collectStatus = #{item.collectStatus} ,
            transferStatus = #{item.transferStatus} ,
            confirmStatus = #{item.confirmStatus},
            originalBusinessId = #{item.originalBusinessId} ,
            remark = #{item.remark} ,
            createBy = #{item.createBy} ,
            createDate = #{item.createDate} ,
            auditBy = #{item.auditBy} ,
            auditDate = #{item.auditDate} ,
            checkBy = #{item.checkBy} ,
            checkDate = #{item.checkDate} 
            where id = #{item.id}
        </foreach>
    </update>

    <!-- 根据主键更新一条信息所有数据 -->
    <update id="updateByPrimaryKey" parameterType="com.blocain.bitms.trade.fund.entity.AccountWithdrawRecordERC20">
        update AccountWithdrawRecordERC20 set
            accountId = #{accountId} ,
            accountAssetType = #{accountAssetType} ,
            accountAssetId = #{accountAssetId} ,
            currentDate = #{currentDate} ,
            businessFlag = #{businessFlag} ,
            stockinfoId = #{stockinfoId} ,
            relatedStockinfoId = #{relatedStockinfoId} ,
            contractAmt = #{contractAmt} ,
            occurDirect = #{occurDirect} ,
            orgAmt = #{orgAmt} ,
            occurAmt = #{occurAmt} ,
            lastAmt = #{lastAmt} ,
            forzenOrgAmt = #{forzenOrgAmt} ,
            occurForzenAmt = #{occurForzenAmt} ,
            forzenLastAmt = #{forzenLastAmt} ,
            transId = #{transId} ,
            chargeAddr = #{chargeAddr} ,
            withdrawAddr = #{withdrawAddr} ,
            fee = #{fee} ,
            netFee = #{netFee} ,
            status = #{status} ,
            approveStatus = #{approveStatus} ,
            collectStatus = #{collectStatus} ,
            transferStatus = #{transferStatus} ,
            confirmStatus = #{confirmStatus},
            originalBusinessId = #{originalBusinessId} ,
            remark = #{remark} ,
            createBy = #{createBy} ,
            createDate = #{createDate} ,
            auditBy = #{auditBy} ,
            auditDate = #{auditDate} ,
            checkBy = #{checkBy} ,
            checkDate = #{checkDate} 
        where id = #{id}
    </update>

    <!-- 根据主键取数据 -->
    <select id="selectByPrimaryKey"  parameterType="java.lang.Long" resultType="com.blocain.bitms.trade.fund.entity.AccountWithdrawRecordERC20">
        select <include refid="accountWithdrawRecordERC20Columns"/> from AccountWithdrawRecordERC20 a where a.id = #{id}
    </select>

    <select id="selectByIdForUpdate"  parameterType="java.lang.Long" resultType="com.blocain.bitms.trade.fund.entity.AccountWithdrawRecordERC20">
        select <include refid="accountWithdrawRecordERC20Columns"/> from AccountWithdrawRecordERC20 a where a.id = #{id} for update wait 3
    </select>

    <!-- 获取待确认的数据 -->
    <select id="getListRecordUnCoinfirm" resultType="com.blocain.bitms.trade.fund.entity.AccountWithdrawRecordERC20">
        SELECT
        <include refid="accountWithdrawRecordERC20Columns"/>
        FROM AccountWithdrawRecordERC20 a
        WHERE 1=1
        and a.approveStatus = 'checkThrough'
        and a.transferStatus = 'transfer'
        and a.confirmStatus = 'unconfirm'
        order by a.currentDate desc
    </select>

    <!-- 查询账户已提现数量  -->
    <select id="findSumAmtByAccount" resultType="java.math.BigDecimal">
        select nvl(sum(OCCURAMT-fee),0) from accountWithdrawRecordERC20
        where accountId=#{accountId } and  accountAssetType='walletAccountAsset' and businessFlag='walletWithdraw'
        and (approveStatus!='cancel' and approveStatus!='auditReject'  and approveStatus!='checkReject'   )
        <if test="stockinfoId != null">
            and stockinfoId  = #{stockinfoId }
        </if>
        <if test="timeStart != null">
            and currentDate &gt;=to_date(#{timeStart},'YYYY-MM-DD hh24:mi:ss')
        </if>
        <if test="timeEnd != null">
            and currentDate &lt;=to_date(#{timeEnd},'YYYY-MM-DD hh24:mi:ss')
        </if>
    </select>

    <!-- 查询账户已提现次数  -->
    <select id="findCuntByAccount" resultType="java.lang.Integer">
        select count(*) from accountWithdrawRecordERC20
        where accountId=#{accountId } and  accountAssetType='walletAccountAsset' and businessFlag='walletWithdraw'
        and (approveStatus!='cancel' and approveStatus!='auditReject'  and approveStatus!='checkReject'   )
        <if test="stockinfoId != null">
            and stockinfoId  = #{stockinfoId }
        </if>
        <if test="timeStart != null">
            and currentDate &gt;=to_date(#{timeStart},'YYYY-MM-DD hh24:mi:ss')
        </if>
        <if test="timeEnd != null">
            and currentDate &lt;=to_date(#{timeEnd},'YYYY-MM-DD hh24:mi:ss')
        </if>
    </select>

    <!-- 可分页的对象查询 -->
    <select id="findList" resultType="com.blocain.bitms.trade.fund.entity.AccountWithdrawRecordERC20">
        SELECT
        <include refid="accountWithdrawRecordERC20JoinColumns"/>
        FROM AccountWithdrawRecordERC20 a
        left join account b on b.id= a.accountId
        left join stockinfo c on c.id=a.stockinfoId
        WHERE 1=1
        <if test="accountId != null">
            and a.accountId = #{accountId}
        </if>
        <if test="accountName != null and accountName != ''">
            and ( b.accountName like '%'||#{accountName}||'%' or b.unid like '%'||#{accountName}||'%')
        </if>
        <if test="businessFlag != null">
            and a.businessFlag like '%'||#{businessFlag}||'%'
        </if>
        <if test="stockinfoId != null">
            and a.stockinfoId = #{stockinfoId}
        </if>
        <if test="approveStatus != null and approveStatus!=''">
            and a.approveStatus =  #{approveStatus}
        </if>
        <if test="relatedStockinfoId != null">
            and a.relatedStockinfoId = #{relatedStockinfoId}
        </if>
        <if test="occurDirect != null">
            and a.occurDirect like '%'||#{occurDirect}||'%'
        </if>
        <if test="transId != null and transId!=''">
            and a.transId like '%'||#{transId}||'%'
        </if>
        <if test="withdrawAddr != null and withdrawAddr!=''">
            and a.withdrawAddr like '%'||#{withdrawAddr}||'%'
        </if>
        <if test="transferStatus != null and transferStatus!=''">
            and a.transferStatus = #{transferStatus}
        </if>
        <if test="originalBusinessId != null">
            and a.originalBusinessId = #{originalBusinessId}
        </if>
        <if test="timeStart != null and timeStart!=''">
            and a.auditDate &gt;=to_date(#{timeStart},'YYYY-MM-DD hh24:mi:ss')
        </if>
        <if test="timeEnd != null and timeEnd!=''">
            and a.auditDate &lt;=to_date(#{timeEnd},'YYYY-MM-DD hh24:mi:ss')
        </if>
        order by a.currentDate desc
    </select>

    <!-- 查询所有 -->
    <select id="selectAll" resultType="com.blocain.bitms.trade.fund.entity.AccountWithdrawRecordERC20">
        SELECT
        <include refid="accountWithdrawRecordERC20Columns"/>
        FROM AccountWithdrawRecordERC20 a WHERE 1=1
    </select>


</mapper>

